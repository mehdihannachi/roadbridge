{"filter":false,"title":"ng-image-input-with-preview.js","tooltip":"/views/bower_components/ng-image-input-with-preview/dist/ng-image-input-with-preview.js","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":80},"end":{"row":0,"column":81},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":131,"mode":"ace/mode/javascript"}},"hash":"7ea2a994afd1d0dab278d1b88dc17fd122962a0b","undoManager":{"mark":64,"position":64,"stack":[[{"start":{"row":0,"column":0},"end":{"row":191,"column":0},"action":"remove","lines":["/*!"," * ng-image-input-with-preview v0.0.6"," * https://github.com/deiwin/ngImageInputWithPreview"," *"," * A FileReader based directive to easily preview and upload image files."," *"," * Copyright 2015, Deiwin Sarjas <deiwin.sarjas@gmail.com>"," * Released under the MIT license"," */","(function(angular, undefined) {","  'use strict';","","  // src/js/fileReader.service.js","  (function() {","    'use strict';","    var module = angular.module('fileReaderService', []);","  ","    // Copied from the following link with onProgress excluded because it's not needed","    // http://odetocode.com/blogs/scott/archive/2013/07/03/building-a-filereader-service-for-angularjs-the-service.aspx","    module.factory('fileReader', ['$q',","      function($q) {","        var onLoad = function(reader, deferred, scope) {","          return function() {","            scope.$apply(function() {","              deferred.resolve(reader.result);","            });","          };","        };","  ","        var onError = function(reader, deferred, scope) {","          return function() {","            scope.$apply(function() {","              deferred.reject(reader.result);","            });","          };","        };","  ","        var getReader = function(deferred, scope) {","          var reader = new FileReader();","          reader.onload = onLoad(reader, deferred, scope);","          reader.onerror = onError(reader, deferred, scope);","          return reader;","        };","  ","        var readAsDataURL = function(file, scope) {","          var deferred = $q.defer();","  ","          var reader = getReader(deferred, scope);","          reader.readAsDataURL(file);","  ","          return deferred.promise;","        };","  ","        return {","          readAsDataUrl: readAsDataURL","        };","      }","    ]);","  })();","","  // src/js/imageWithPreview.directive.js","  /*jshint -W072 */","  // ^ ignore jshint warning about link method having too many parameters","  (function() {","    'use strict';","    var module = angular.module('ngImageInputWithPreview', [","      'fileReaderService',","    ]);","  ","    module.directive('imageWithPreview', ['fileReader', '$q',","      function(fileReader, $q) {","        var DEFAULT_MIMETYPES = 'image/png,image/jpeg';","        var NOT_AN_IMAGE = 'this-is-not-an-image';","  ","        var isAnAllowedImage = function(allowedTypes, file) {","          if (!allowedTypes) {","            allowedTypes = DEFAULT_MIMETYPES;","          }","          var allowedTypeArray = allowedTypes.split(',');","          return allowedTypeArray.some(function(allowedType) {","            if (allowedType === file.type) {","              return true;","            }","            var allowedTypeSplit = allowedType.split('/');","            var fileTypeSplit = file.type.split('/');","            return allowedTypeSplit.length === 2 && fileTypeSplit.length === 2 && allowedTypeSplit[1] === '*' &&","              allowedTypeSplit[0] === fileTypeSplit[0];","          });","        };","        var createResolvedPromise = function() {","          var d = $q.defer();","          d.resolve();","          return d.promise;","        };","  ","        return {","          restrict: 'A',","          require: 'ngModel',","          scope: {","            image: '=ngModel',","            allowedTypes: '@accept',","            dimensionRestrictions: '&dimensions',","          },","          link: function($scope, element, attrs, ngModel) {","            element.bind('change', function(event) {","              var file = (event.srcElement || event.target).files[0];","              // the following link recommends making a copy of the object, but as the value will only be changed","              // from the view, we don't have to worry about making a copy","              // https://docs.angularjs.org/api/ng/type/ngModel.NgModelController#$setViewValue","              ngModel.$setViewValue(file, 'change');","            });","            ngModel.$parsers.push(function(file) {","              if (!file) {","                return file;","              }","              if (!isAnAllowedImage($scope.allowedTypes, file)) {","                return NOT_AN_IMAGE;","              }","              return {","                fileReaderPromise: fileReader.readAsDataUrl(file, $scope),","              };","            });","            $scope.$watch('image', function(value) {","              if (value && typeof value === 'string') {","                $scope.image = {","                  src: value,","                  isPath: true,","                };","              }","            });","            ngModel.$validators.image = function(modelValue, viewValue) {","              var value = modelValue || viewValue;","              return value !== NOT_AN_IMAGE;","            };","            ngModel.$asyncValidators.parsing = function(modelValue, viewValue) {","              var value = modelValue || viewValue;","              if (!value || !value.fileReaderPromise) {","                return createResolvedPromise();","              }","              // This should help keep the model value clean. At least I hope it does","              value.fileReaderPromise.finally(function() {","                delete value.fileReaderPromise;","              });","              return value.fileReaderPromise.then(function(dataUrl) {","                value.src = dataUrl;","              }, function() {","                return $q.reject('Failed to parse');","              });","            };","            ngModel.$asyncValidators.dimensions = function(modelValue, viewValue) {","              if (!attrs.dimensions) {","                return createResolvedPromise();","              }","              var value = modelValue || viewValue;","              if (!value || !value.fileReaderPromise) {","                return createResolvedPromise();","              }","              var deferred = $q.defer();","              value.fileReaderPromise.then(function(dataUrl) {","                // creating an image lets us find out its dimensions after it's loaded","                var image = document.createElement('img');","                image.addEventListener('load', function() {","                  var valid = $scope.dimensionRestrictions({","                    width: image.width,","                    height: image.height,","                  });","                  $scope.$apply(function() {","                    if (valid) {","                      deferred.resolve();","                    } else {","                      deferred.reject('Invalid dimensions');","                    }","                  });","                });","                image.addEventListener('error', function() {","                  $scope.$apply(function() {","                    deferred.reject('Failed to detect dimensions. Not an image!');","                  });","                });","                image.src = dataUrl;","              }, function() {","                deferred.reject('Failed to detect dimensions');","              });","              return deferred.promise;","            };","          }","        };","      }","    ]);","  })();","})(window.angular);",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":45,"column":30},"action":"insert","lines":["(function (module) {","     ","    var fileReader = function ($q, $log) {"," ","        var onLoad = function(reader, deferred, scope) {","            return function () {","                scope.$apply(function () {","                    deferred.resolve(reader.result);","                });","            };","        };"," ","        var onError = function (reader, deferred, scope) {","            return function () {","                scope.$apply(function () {","                    deferred.reject(reader.result);","                });","            };","        };"," "," ","        var getReader = function(deferred, scope) {","            var reader = new FileReader();","            reader.onload = onLoad(reader, deferred, scope);","            reader.onerror = onError(reader, deferred, scope);","            return reader;","        };"," ","        var readAsDataURL = function (file, scope) {","            var deferred = $q.defer();","             ","            var reader = getReader(deferred, scope);         ","            reader.readAsDataURL(file);","             ","            return deferred.promise;","        };"," ","        return {","            readAsDataUrl: readAsDataURL  ","        };","    };"," ","    module.factory(\"fileReader\",","                   [\"$q\", \"$log\", fileReader]);"," ","}(angular.module(\"plunker\")));"]}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":30},"action":"remove","lines":["(function (module) {","     ","    var fileReader = function ($q, $log) {"," ","        var onLoad = function(reader, deferred, scope) {","            return function () {","                scope.$apply(function () {","                    deferred.resolve(reader.result);","                });","            };","        };"," ","        var onError = function (reader, deferred, scope) {","            return function () {","                scope.$apply(function () {","                    deferred.reject(reader.result);","                });","            };","        };"," "," ","        var getReader = function(deferred, scope) {","            var reader = new FileReader();","            reader.onload = onLoad(reader, deferred, scope);","            reader.onerror = onError(reader, deferred, scope);","            return reader;","        };"," ","        var readAsDataURL = function (file, scope) {","            var deferred = $q.defer();","             ","            var reader = getReader(deferred, scope);         ","            reader.readAsDataURL(file);","             ","            return deferred.promise;","        };"," ","        return {","            readAsDataUrl: readAsDataURL  ","        };","    };"," ","    module.factory(\"fileReader\",","                   [\"$q\", \"$log\", fileReader]);"," ","}(angular.module(\"plunker\")));"],"id":3},{"start":{"row":0,"column":0},"end":{"row":30,"column":2},"action":"insert","lines":["","","var UploadController = function ($scope, fileReader) {","","    $scope.getFile = function () {","","        fileReader.readAsDataUrl($scope.file, $scope)","           .then(function(result) {","                $scope.imageSrc = result;","            });","    };"," ","};","","app.directive(\"ngFileSelect\",function(){","","  return {","    link: function($scope,el){","      ","      el.bind(\"change\", function(e){","      ","        $scope.file = (e.srcElement || e.target).files[0];","        $scope.getFile();","      })","      ","    }","    ","  }","  ","  ","})"]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":3},"action":"remove","lines":["app"],"id":4},{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"insert","lines":["r"]}],[{"start":{"row":14,"column":1},"end":{"row":14,"column":2},"action":"insert","lines":["o"],"id":5}],[{"start":{"row":14,"column":2},"end":{"row":14,"column":3},"action":"insert","lines":["a"],"id":6}],[{"start":{"row":14,"column":3},"end":{"row":14,"column":4},"action":"insert","lines":["d"],"id":7}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"remove","lines":["road"],"id":8},{"start":{"row":14,"column":0},"end":{"row":14,"column":10},"action":"insert","lines":["roadbridge"]}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":3},"action":"remove","lines":["var"],"id":9}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"remove","lines":[" "],"id":10}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":10},"action":"insert","lines":["roadbridge"],"id":11}],[{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["0"],"id":12}],[{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"remove","lines":["0"],"id":13}],[{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["."],"id":14}],[{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["c"],"id":15}],[{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["o"],"id":16}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["n"],"id":17}],[{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["t"],"id":18}],[{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["r"],"id":19}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["o"],"id":20}],[{"start":{"row":2,"column":11},"end":{"row":2,"column":17},"action":"remove","lines":["contro"],"id":21},{"start":{"row":2,"column":11},"end":{"row":2,"column":21},"action":"insert","lines":["controller"]}],[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":["("],"id":22}],[{"start":{"row":2,"column":22},"end":{"row":2,"column":138},"action":"insert","lines":["('dashboardController', function($scope, $http, $resource, $window, $state, $sessionStorage, $rootScope, $timeout) {"],"id":23}],[{"start":{"row":2,"column":138},"end":{"row":2,"column":154},"action":"remove","lines":["UploadController"],"id":24}],[{"start":{"row":2,"column":24},"end":{"row":2,"column":43},"action":"remove","lines":["dashboardController"],"id":25},{"start":{"row":2,"column":24},"end":{"row":2,"column":40},"action":"insert","lines":["UploadController"]}],[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"remove","lines":["("],"id":26}],[{"start":{"row":2,"column":50},"end":{"row":2,"column":132},"action":"remove","lines":["($scope, $http, $resource, $window, $state, $sessionStorage, $rootScope, $timeout)"],"id":27},{"start":{"row":2,"column":50},"end":{"row":2,"column":70},"action":"insert","lines":["($scope, fileReader)"]}],[{"start":{"row":2,"column":73},"end":{"row":2,"column":104},"action":"remove","lines":["= function ($scope, fileReader)"],"id":28}],[{"start":{"row":2,"column":73},"end":{"row":2,"column":74},"action":"remove","lines":[" "],"id":29}],[{"start":{"row":2,"column":73},"end":{"row":2,"column":74},"action":"remove","lines":["{"],"id":30}],[{"start":{"row":2,"column":72},"end":{"row":2,"column":73},"action":"remove","lines":[" "],"id":31}],[{"start":{"row":12,"column":1},"end":{"row":12,"column":2},"action":"insert","lines":["="],"id":32}],[{"start":{"row":12,"column":1},"end":{"row":12,"column":2},"action":"remove","lines":["="],"id":33}],[{"start":{"row":12,"column":1},"end":{"row":12,"column":2},"action":"insert","lines":[")"],"id":34}],[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["","",""],"id":35},{"start":{"row":2,"column":2},"end":{"row":2,"column":4},"action":"remove","lines":["  "]},{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"remove","lines":[" "]},{"start":{"row":4,"column":0},"end":{"row":4,"column":4},"action":"remove","lines":["    "]},{"start":{"row":5,"column":0},"end":{"row":5,"column":5},"action":"remove","lines":["     "]},{"start":{"row":6,"column":8},"end":{"row":6,"column":16},"action":"remove","lines":["        "]},{"start":{"row":7,"column":0},"end":{"row":7,"column":3},"action":"remove","lines":["   "]},{"start":{"row":7,"column":6},"end":{"row":7,"column":9},"action":"remove","lines":["   "]},{"start":{"row":8,"column":2},"end":{"row":8,"column":4},"action":"remove","lines":["  "]},{"start":{"row":9,"column":0},"end":{"row":9,"column":1},"action":"remove","lines":[" "]},{"start":{"row":12,"column":36},"end":{"row":12,"column":37},"action":"insert","lines":[" "]},{"start":{"row":12,"column":47},"end":{"row":12,"column":48},"action":"insert","lines":[" "]},{"start":{"row":15,"column":26},"end":{"row":15,"column":27},"action":"insert","lines":[" "]},{"start":{"row":15,"column":30},"end":{"row":15,"column":31},"action":"insert","lines":[" "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":6},"action":"remove","lines":["      "]},{"start":{"row":17,"column":35},"end":{"row":17,"column":36},"action":"insert","lines":[" "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":6},"action":"remove","lines":["      "]},{"start":{"row":22,"column":0},"end":{"row":22,"column":6},"action":"remove","lines":["      "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"remove","lines":["    "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":2},"action":"remove","lines":["  "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"remove","lines":["  "]},{"start":{"row":28,"column":2},"end":{"row":29,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["f"],"id":36}],[{"start":{"row":6,"column":10},"end":{"row":6,"column":11},"action":"insert","lines":["o"],"id":37}],[{"start":{"row":6,"column":11},"end":{"row":6,"column":12},"action":"insert","lines":["o"],"id":38}],[{"start":{"row":6,"column":12},"end":{"row":6,"column":13},"action":"insert","lines":["g"],"id":39}],[{"start":{"row":6,"column":12},"end":{"row":6,"column":13},"action":"remove","lines":["g"],"id":40}],[{"start":{"row":6,"column":11},"end":{"row":6,"column":12},"action":"remove","lines":["o"],"id":41}],[{"start":{"row":6,"column":10},"end":{"row":6,"column":11},"action":"remove","lines":["o"],"id":42}],[{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"remove","lines":["f"],"id":43}],[{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["r"],"id":44}],[{"start":{"row":6,"column":10},"end":{"row":6,"column":11},"action":"insert","lines":["o"],"id":45}],[{"start":{"row":6,"column":11},"end":{"row":6,"column":12},"action":"insert","lines":["o"],"id":46}],[{"start":{"row":6,"column":12},"end":{"row":6,"column":13},"action":"insert","lines":["t"],"id":47}],[{"start":{"row":6,"column":13},"end":{"row":6,"column":14},"action":"remove","lines":["s"],"id":48}],[{"start":{"row":6,"column":13},"end":{"row":6,"column":14},"action":"insert","lines":["S"],"id":49}],[{"start":{"row":0,"column":69},"end":{"row":0,"column":70},"action":"insert","lines":[","],"id":50}],[{"start":{"row":0,"column":70},"end":{"row":0,"column":71},"action":"insert","lines":[" "],"id":51}],[{"start":{"row":0,"column":71},"end":{"row":0,"column":72},"action":"insert","lines":["r"],"id":52}],[{"start":{"row":0,"column":71},"end":{"row":0,"column":72},"action":"remove","lines":["r"],"id":53}],[{"start":{"row":0,"column":71},"end":{"row":0,"column":72},"action":"insert","lines":["^"],"id":54},{"start":{"row":0,"column":72},"end":{"row":0,"column":73},"action":"insert","lines":["^"]}],[{"start":{"row":0,"column":72},"end":{"row":0,"column":73},"action":"remove","lines":["^"],"id":55}],[{"start":{"row":0,"column":71},"end":{"row":0,"column":72},"action":"remove","lines":["^"],"id":56}],[{"start":{"row":0,"column":71},"end":{"row":0,"column":72},"action":"insert","lines":["$"],"id":57}],[{"start":{"row":0,"column":72},"end":{"row":0,"column":73},"action":"insert","lines":["r"],"id":58}],[{"start":{"row":0,"column":73},"end":{"row":0,"column":74},"action":"insert","lines":["o"],"id":59}],[{"start":{"row":0,"column":74},"end":{"row":0,"column":75},"action":"insert","lines":["o"],"id":60}],[{"start":{"row":0,"column":75},"end":{"row":0,"column":76},"action":"insert","lines":["t"],"id":61}],[{"start":{"row":0,"column":76},"end":{"row":0,"column":77},"action":"insert","lines":["S"],"id":62}],[{"start":{"row":0,"column":77},"end":{"row":0,"column":78},"action":"insert","lines":["c"],"id":63}],[{"start":{"row":0,"column":78},"end":{"row":0,"column":79},"action":"insert","lines":["o"],"id":64}],[{"start":{"row":0,"column":79},"end":{"row":0,"column":80},"action":"insert","lines":["p"],"id":65}],[{"start":{"row":0,"column":80},"end":{"row":0,"column":81},"action":"insert","lines":["e"],"id":66}]]},"timestamp":1505017981612}